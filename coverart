#!/bin/bash
#
# pbrisbin 2010
#
# fetch and organize albumart for your music collection
#
# images are both stored alongside the media as folder.jpg and copied 
# into a central directory, each image named as artist_album.jpg.
#
###

# strip out (Crap) / Disc X / Volume Y
clean_string() {
  local string="$1" sedscript

  sedscript='
  s/(.*) +\([^\)]*\)/\1/g;
  s/(.*) +\(.*/\1/g;
  s/(.*) +\[?[Dd]is[ck].*/\1/g;
  s/(.*) +\[?[Vv]olume.*/\1/g;
  '

  echo $string | sed -r "$sedscript"
}

# make a sane, tag-based filename so other apps can find cover images if 
# they know the track's tags
fix_filename() {
  local artist="$1" album="$2" sedscript

  sedscript='
  s/.*/\L&/g;
  s/ /_/g;
  s/[^a-z0-9_.-]//g;
  '

  read -r filename < <(echo "$artist $album" | sed -r "$sedscript")

  echo $filename.jpg
}

fetch_cover() {
  local artist="$1" album="$2" output="$3" cover_url

  # https://github.com/pbrisbin/albumart
  read -r cover_url < <(albumart.php -a "$artist" -b "$album" 2>/dev/null);

  # cover url not found
  [[ ! "$cover_url" =~ ^http:// ]] && return 1

  wget -O "$output" "$cover_url"
}

# constants
mdir="$HOME/Music"
odir='/srv/http/static/covers'
cover='folder.jpg'

while read -r directory; do
  filename="$directory/$cover"

  if [[ -f "$filename" ]]; then
    # cover has already been placed at folder.jpg
    for file in "$directory"/*; do
      # read tags
      read -r artist < <(mpc list artist any "${file/$mdir\//}")
      read -r album  < <(mpc list album any "${file/$mdir\//}")
      [[ -n "$artist$album" ]] && break
    done

    if [[ -n "$artist$album" ]]; then
      # move to odir if needed
      ofilename="$odir/$(fix_filename "$artist" "$album")"
      [[ ! -f "$ofilename" ]] && cp -v "$filename" "$ofilename"
    fi
  else
    for file in "$directory"/*; do
      # read tags
      read -r artist < <(mpc list artist any "${file/$mdir\//}")
      read -r album  < <(mpc list album any "${file/$mdir\//}")
      [[ -n "$artist$album" ]] && break
    done

    # try and download to folder.jpg
    if [[ -n "$artist$album" ]] && fetch_cover "$artist" "$(clean_string "$album")" "$filename"; then
      # move to odir if needed
      ofilename="$odir/$(fix_filename "$artist" "$album")"
      [[ ! -f "$ofilename" ]] && cp -v "$filename" "$ofilename"
    fi
  fi
done < <(find "$mdir" -type f -exec dirname {} \; | sort -u)
