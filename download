#!/bin/bash
#
# pbrisbin 2010
#
# handle download requests out of jumanji and auto open the file based
# on mimetype (requires xdg-mime).
#
# set download_dir ~/Downloads/
# set download_command download '%s' '%s'
#
###

# the broken pipe should kill zenity with a non-zero exit status which
# should do any other cleanup regarding half downloaded files -- i use
# the term 'should' loosely
clean_up() { rm -f "$fifo"; exit ${1:-0}; } 

# try a specific mimetype match (adjust the cases as you like) and then
# fall back on a major version only match
open_file() {
  # use my custom xdg-open script (same logic)
  xdg-open "$1"

#  local file="$1" filetype major minor
#
#  [[ ! -f "$file" ]] && echo "$0: file not found - $file" >&2 && return 0
#
#  # try for exact match
#  filetype="$(xdg-mime query filetype "$file" 2>/dev/null | cut -d ';' -f 1)"
#
#  case "$filetype" in
#    text/html)       $BROWSER "$file" &>/dev/null & return 0 ;;
#    application/pdf) zathura "$file"  &>/dev/null & return 0 ;;
#    application/ogg) playnow "$file"  &>/dev/null & return 0 ;;
#    audio/x-wav)     mplayer "$file"  &>/dev/null & return 0 ;;
#  esac
#
#  # match based on major only
#  IFS='/' read -r major minor <<< "$filetype"
#
#  case "$major" in
#    image) mirage "$file"        &>/dev/null & return 0 ;;
#    audio) playnow "$file"       &>/dev/null & return 0 ;;
#    text)  urxvtc -e vim "$file" &>/dev/null & return 0 ;;
#    video) mplayer "$file"       &>/dev/null & return 0 ;;
#  esac
#
#  echo "$0: unmatched file - $file" >&2
#  return 1
}

# kills the download process we've spawned, then goes after the wget
# zombie that's created (why, i don't know), then removes the partial
# download and cleans up the fifo
cancel_download() {
  local file="$1"

  echo "$0: cancelling download - $file..." >&2

  # kills everything we've started _but_ wget ::sigh::
  kill -9 $wget_pid || "$0: unable to kill supporting processes - $wget_pid" >&2

  # circle back on wget, that zombie mo-fuckah
  pkill -TERM -f "wget -O $file" || "$0: unable to kill wget" >&2

  # clean any partial download
  rm -f "$file" || "$0: unable to remove - $file" >&2

  clean_up 1
}

# spawns a wget process in background, monitors its progress and reports
# via a waiting zenity through a fifo
download_url() {
  local url="$1" file="${2/\~/$HOME}" sedscript
  
  sedscript='
    s/^[a-zA-Z\-].*//;
    s/.* \{1,2\}\([0-9]\{1,3\}\)%.*/\1\n#Downloading... \1%/;
    s/^20[0-9][0-9].*/#Done./;'

  [[ ! -e "$fifo" ]] && mkfifo "$fifo"

  (wget -O "$file" --load-cookies ~/.config/jumanji/cookies \
                   --user-agent=Firefox "$url" 2>&1 | sed -u "$sedscript" >> "$fifo") &

  wget_pid=$!

  while ps "$wget_pid" | grep -F "$0"; do
    zenity --progress \
           --auto-kill \
           --auto-close \
           --percentage=0 \
           --title="Downloading $file..." < "$fifo" || cancel_download "$file"
  done

  # try and open it
  open_file "$file"
  clean_up
}

trap 'clean_up 1' TERM HUP QUIT INT

fifo="/tmp/jumanji_dl.$$"

download_url "$1" "$2"
