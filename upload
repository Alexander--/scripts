#!/bin/bash
#
# pbrisbin 2009
#
# update aur packages
#
###

errorout() { echo "error: $*"; exit 1; }

message() { echo 'upload [--skip] <package> ...'; exit 1; }

prompt() {
  read -p "$*? [Y/n] " a

  case "${a:-y}" in
    y|Y) return 0 ;;
    q|Q) exit 1   ;;
    *)   return 1 ;;
  esac
}

process() {
  local pack archive 

  pack="$1"
  archive="./$pack.tar.gz"

  if ! $skip; then
    # copy any new sources to server
    [[ -f "$bin/$pack" ]] || errorout "no source at $bin/$1"
    cp -v "$bin/$pack" "$sources/$pack" || errorout 'unable to copy sources'
  fi

  [[ -d "$packages/$pack" ]] || errorout "no package at $packages/$1"

  if ! $skip; then
    # update md5's
    pushd "$packages/$pack" &>/dev/null || errorout 'unable to change directory'
    [[ -f ./PKGBUILD ]]                 || errorout 'pkbuild not found'
    makepkg -g >> ./PKGBUILD            || errorout 'failed updating md5sums'
    vim ./PKGBUILD                      || errorout 'error editing pkgbuild'

    # remove sources from makepkg -g run -- todo: make this _way_ less
    # presumptuous
    rm -rv ./src $pack || errorout 'error removing sources'

    popd &>/dev/null
  fi

  if ! $skip; then
    # create tarball
    tar cvpzf "$archive" "$packages/$pack" &>/dev/null || errorout 'failed to compress archive'
  fi

  # prompt to upload
  prompt "upload $archive" || exit 1
  aurploader -r -l "$aurpass" "$archive" || errorout 'failed to upload archive'
  rm "$archive"                          || errorout 'failed to remove archive'
}

parse_options() {
  # for now, skip basically means not a my-script package i want to get
  # finer grained control over the process but keep the flags simple
  skip=false
  args=()

  while [[ -n "$1" ]]; do
    case "$1" in
      --skip) skip=true      ;;
      -*)     message        ;;
      *)      args+=( "$1" ) ;;
    esac
    shift
  done

  [[ "${#args[@]}" -eq 0 ]] && message
}

bin="$HOME/.bin"
sources='/srv/http/sources'
packages="$HOME/AUR"
aurpass="$HOME/.aurploader_pass"

[[ -f "$aurpass" ]] || errorout "no password at $aurpass"

parse_options "$@"

for pack in "${args[@]}"; do process "$pack"; done

echo 'success!'
