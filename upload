#!/bin/bash
#
# pbrisbin 2009
#
# update aur packages
#
###

errorout() { echo "error: $*" >&2; exit 1; }
message()  { echo 'upload [ --skip ] <package> ...'; exit 1; }

prompt() {
  read -p "$*? [Y/n] " a

  case "${a:-y}" in
    y|Y) return 0 ;;
    q|Q) exit 1   ;;
    *)   return 1 ;;
  esac
}

process() {
  local pack archive 

  pack="$1"
  archive="./$pack.tar.gz"

  [[ -d "$packages/$pack" ]] || errorout "no package at $packages/$1"

  if ! $skip; then
    pushd "$packages/$pack" &>/dev/null    || errorout 'unable to change directory'
    cp -v "$bin/$pack" .                   || errorout 'unable to copy sources'
    [[ -f ./PKGBUILD ]]                    || errorout 'pkbuild not found'
    makepkg -g >> ./PKGBUILD               || errorout 'failed updating md5sums'
    vim ./PKGBUILD                         || errorout 'error editing pkgbuild'
    rm -rv ./src                           || errorout 'error removing sources'
    popd &>/dev/null                       || errorout 'unable to change directory'
    tar cvpzf "$archive" "$packages/$pack" || errorout 'failed to compress archive'
  fi

  # prompt to upload
  prompt "upload $archive" || exit 1
  aurploader -r -l "$aurpass" "$archive" || errorout 'failed to upload archive'
  rm "$archive"                          || errorout 'failed to remove archive'
}

parse_options() {
  skip=false
  args=()

  while [[ -n "$1" ]]; do
    case "$1" in
      --skip) skip=true      ;;
      -*)     message        ;;
      *)      args+=( "$1" ) ;;
    esac
    shift
  done

  [[ "${#args[@]}" -eq 0 ]] && message
}

bin="$HOME/.bin"
packages="$HOME/AUR"
aurpass="$HOME/.aurploader_pass"

[[ -f "$aurpass" ]] || errorout "no password at $aurpass"

parse_options "$@"

for pack in "${args[@]}"; do process "$pack"; done

echo 'success!'
