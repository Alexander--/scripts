#!/bin/bash
#
# pbrisbin 2010
#
# rewritten based on ideas from falconindy's SquashFu:
#       http://github.com/falconindy/SquashFu
#
###

errorout() { echo "error: $*" >&2; exit 1; }
message()  { echo 'usage: backup [ -d | -m | --media ]'; exit 1; }

check_lock() {
  local drive="$1"

  [[ -f "$drive/.lock" ]] && return 0

  # if we get here we fail
  errorout "$drive/.lock not found. is it mounted?"
}

# must be root
[[ $(id -u) -eq 0 ]] || errorout 'only root can do that.'

# normal backup settings
backup_daily='/mnt/backup/daily'
backup_monthly='/mnt/backup/monthly'
includes=( /srv/http /home/patrick /etc /usr /var /boot )
excludes=( Downloads lost+found )

# my large media collection is handled specially
media_backup='/mnt/backup2'
media_includes=( /mnt/media/Music /mnt/media/Rips /mnt/media/Movies /mnt/media/TV_shows )
media_excludes=( converted )

if [[ "$1" = '--media' ]]; then
  # do a media backup and exit
  check_lock "$media_backup"
  echo -n "syncing media to $media_backup/... "
  rsync -a -l --delete --delete-excluded "${media_includes[@]}" ${media_excludes[@]/#/--exclude } "$media_backup/"
  echo 'done.'
  exit $?
fi

case "$1" in
  -d|--daily)   backup_dir="$backup_daily"   ;;
  -m|--monthly) backup_dir="$backup_monthly" ;;
  *)            message                      ;;
esac

# default
backup_dir="${backup_dir:-$backup_daily}"

# is mounted
check_lock "$backup_dir"

echo -n "syncing directories to $backup_dir/... "
rsync -a -l --delete --delete-excluded "${includes[@]}" ${excludes[@]/#/--exclude } "$backup_dir/"
echo 'done.'

echo -n 'generating package lists... '
# falconindy broke it
#pacman -Qqe | grep -Fvx "$(pacman -Qqm)" > "$backup_dir/paclog" || errorout 'failed creating paclisting'
pacman -Qqe | grep -Fvx "$(pacman -Qqm </dev/null)" > "$backup_dir/paclog" || errorout 'failed creating paclisting'
pacman -Qqm > "$backup_dir/aurlog"                              || errorout 'failed creating aur listing'
echo 'done.'
