#!/bin/bash
#
# pbrisbin 2010
#
# http://pbrisbin.com/bin/batchconvert
#
# converts files listed in $queue to iPad compatiable H264 mp4s -- uses
# -q 1.0 meaning no compression
#
###

# utilities
logger() { echo "$(date +'[ %d %b %Y %H %M ]') :: $*" | tee -a $log; }

errorout() { logger "error: $*"; exit 1; }

message() { echo 'usage: batchconvert [ -a <file> ... ]'; exit 1; }

rel2abs() {
  local file dir

  file="$(basename "$1")"
  dir="$(dirname "$1")"

  pushd "${dir:-./}" &>/dev/null || return 1
  echo "$PWD/$file"
  popd &>/dev/null
}

add_to_queue() {
  local entry="$(rel2abs "$1")"

  grep -Fx "$entry" "$queue" || echo "$entry" >> "$queue"
}

remove_from_queue() {
  local entry="$1"

  grep -Fvx "$entry" "$queue" > /tmp/foo
  mv /tmp/foo "$queue"
}

convert() {
  local from="$1" to="$2"

  if [[ ! -f "$from" ]]; then
    logger "$from: not found, removing from queue"
    remove_from_queue "$from"
    return 1
  fi

  logger "convert $from --> $to.."
  if nice -n 15 handbrake -Z iPad -q 1.0 -i "$from" -o "$to" 2>/dev/null </dev/null; then
    echo; logger 'success'
    return 0
  else
    echo; logger 'failure'
    return 1
  fi
}

post_convert() {
  local from="$1" to="$2"

  if [[ -f "$to" ]]; then
    logger "rm $from..."
    rm "$from" || return 1

    logger "mv $to..."
    mv "$to" "$(dirname "$from")" || return 1

    logger "remove $from from the queue"
    remove_from_queue "$from"
  fi
}

process_queue() {
  local from to

  logger 'begin processing'
  while IFS=$'\n' read -r from; do
    to="/tmp/$(basename "${from%.*}").mp4"  
    convert "$from" "$to" && post_convert "$from" "$to"
  done < "$queue"
  logger 'end processing'
}

parse_options() {
  touch "$queue" || errorout 'unable to touch queue'

  if [[ "$1" =~ -a|--add ]]; then
    shift; for arg in "$@"; do
      add_to_queue "$arg"
    done
    exit 0
  elif [[ "$1" =~ -h|--help ]]; then
    message
  fi
}

log="${LOGS:-$PWD}/batchconvert.log"
queue="$HOME/.batchconvert.queue"

parse_options "$@"
process_queue
