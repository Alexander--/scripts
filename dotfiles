#!/bin/bash
#
# pbrisbin 2010
#
###

message() { echo 'usage: dotfiles [ pull ]'; exit 1; }

errorout() { echo "$*" >&2; exit 1; }

ignore_file() {
  [[ ! -f "$ignores" ]] && return 1

  grep -Fqx "$1" "$ignores"
}

do_pull() {
  local source

  if [[ -d "$dotfiles" ]]; then
    # update local files
    cd $dotfiles && git pull origin
  else
    # clone from remote
    git clone "$remote" "$dotfiles"
  fi

  cd "$dotfiles" || errorout 'failed to change directory'

  # copy any existing clean dotfiles into their actual locations
  for source in $clean; do
    if [[ -f "$HOME/$source" ]] && ! ignore_file "$source"; then
      cp -v "$source" "$HOME/$source"
    fi
  done
}

do_push() {
  local source

  # get sed scrubme pattern from a mod 600 cred file
  . "$HOME/.credentials"

  # if we don't now know what to scrub, GTFO
  [[ -z "$scrubme" ]] && errorout 'scrub pattern not found'

  cd "$HOME" || errorout 'failed to change directory'

  for source in $clean; do
    if [[ -f "$HOME/$source" ]]; then
      dest="$dotfiles/${source}"
      cp "$HOME/$source" "$dest"
    fi
  done

  for source in $dirty; do
    if [[ -f "$HOME/$source" ]]; then
      dest="$dotfiles/${source}"
      sed "$scrubme" "$HOME/$source" > "$dest"
    fi
  done
}

# local dotfiles
dotfiles="$HOME/.dotfiles"

# clonable url once pushed
remote='git://github.com/pbrisbin/dotfiles.git'

# in each client, put one file per line in a file to ignore it during a
# pull operation
ignores="$HOME/.dotfile_ignores"

# can be copied as-is
clean='.bashrc
       .Xdefaults
       .xcolors/zenburn.xcolors
       .xcolors/jasonwryan.xcolors
       .xinitrc
       .screenrc
       .vimrc
       .conkyrc
       .dmenurc
       .dzen_conkyrc
       .dvdcopy.conf
       .config/aurgetrc
       .config/openbox/rc.xml
       .config/openbox/menu.xml
       .ncmpcpp/config
       .irssi/my.theme'

# must be scrubbed
dirty='.mutt/muttrc
       .mutt/gmx.muttrc
       .mutt/gmail.muttrc
       .mutt/colors.muttrc
       .mutt/sidebar.muttrc
       .offlineimaprc
       .msmtprc
       .irssi/config'

if [[ -n "$1" ]]; then
  # allow client-side pulls
  [[ "$1" = 'pull' ]] && do_pull || message
else
  # default is push
  do_push
fi
