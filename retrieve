#!/bin/bash
#
# pbrisbin 2009
#
###

message()  { echo 'usage: retrieve [ -m ] <file>'; exit 1; }
errorout() { echo "error: $*" >&2; exit 1; }

# relative to absolute
rel2abs() {
  local file="$(basename "$1")"
  local dir="$(dirname "$1")"

  pushd "${dir:-./}" &>/dev/null || exit 1
  dir="$PWD"; popd &>/dev/null

  echo "$dir/$file"
}

# prompt user
prompt() {
  echo -en "\a$*? [Y/n/q] " && read A

  case "${A:-y}" in
    y|Y) return 0 ;;
    q|Q) exit 1   ;;
    *)   return 1 ;;
  esac
}

# make dest absolute
set_dst() { dst="$(rel2abs "$1")"; }

# remove leading / or /home
set_src() {
  case "$dst" in
    /home*) src="$src/${dst/\/home\//}" ;;
    *)      src="$src/${dst/\//}"       ;;
  esac

  # do we have a backup file?
  [[ ! -e "$src" ]] && errorout "$src: file not found"
}

do_retrieve() {
  # don't clobber without prompting
  if [[ -e "$dst" ]]; then
    prompt "$dst exists, overwrite" || exit 1

    # needed only if replacing an existing dir
    [[ -d "$src" ]] && dst="$(dirname "$dst")"
  fi

  cp -av "$src" "$dst" || errorout 'retrieval failed'
}

# source conf
conf='/home/patrick/.config/backup.conf'
[[ -f "$conf" ]] && . "$conf" || errorout "conf $conf not found"

# default
src="$BACKUP_DAILY"

# get opts
while [ -n "$1" ]; do
  case "$1" in
    -h) message               ;;
    -m) src="$BACKUP_MONTHLY" ;;
    *)  break                 ;;
  esac
  shift
done

# run it
for arg in "$@"; do
  # set the destination file from the arg
  set_dst "$arg"

  # set the source file from the destination
  set_src

  # do the actual retrieval
  do_retrieve
done
